/*
Copyright (C) 2001-2002 Mainline Project (I3S - ESSI - CNRS -UNSA)

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For further information on the GNU Lesser General Public License,
see: http://www.gnu.org/copyleft/lesser.html
For further information on this library, contact: mainline@essi.fr
*/


#
#       identifier = className:operatorPriorities:operatorArity
#       operatorPriorities = asOperatorPriority:asOperandPriority
#
# identifier is the identifier of the resource. Corresponds to what the control (i.e. the control part of the MVC
# pattern, so in our case, the parser(s)) send to the model to build it. See the parser for explanation of the
# different of the different tokens and their use.
#
# className is the class to instanciate. The class name is fully qualified and then contains the name of the package
# where the class is.
#
# asOperatorPriority is the priority of the operator when it is considered as an operator (i.e. we are inserting
# operand(s) to the operator in the formula tree structure). Its value is a number.
#
# asOperandPriority is the priority of the operator when it is considered as an operand. (i.e we are inserting the
# operator in the formula tree structure). Its value is a number.
#
# operatorArity is the operator arity. This field is in fact only used for K-ary operators, the class to
# instanciate is then fr.ove.openmath.jome.model.KaryOperator. (more generally, all subclasses of KaryOperator)
# Of course, its value is a positive number. In all the other cases, this field is omitted.
#
# Two specific keywords are defined for each field.
# refine when the element we want to insert is not completely defined for its token. It is the case for FUNCTION,
# RESERVED and SPECIALIZED.
# The function term contains all operators whose linear syntax is name(...). According to the name of the function,
# we have to ...refine all the field to instanciate the correct object. The same for the to others.
# null when the token received not used as an identifier of a class to instanciate to insert in the formula tree
# structure (e.g. CLOSE_PAREN, SEPRATOR,...) or when the value has no importance.

formulaPriorities = 0:0
slotPriorities = 0:1000
bracketPriorities = 5:1000
binaryPriorities = 10:10
unaryPlusPriorities = 100:102
unaryMinusPriorities = 100:101
plusPriorities = 100:100
timesPriorities = 200:200
dividePriorities = 300:301
powerPriorities = 500:450
factorialPriorities = 1000:900
constantPriorities = 1000:1000
rondPriorities = 10:11

# not directly instanciated (private)
UNARYPLUS = fr.ove.openmath.jome.model.UnaryOperator:unaryPlusPriorities
UNARYMINUS = fr.ove.openmath.jome.model.UnaryOperator:unaryMinusPriorities
SLOT = fr.ove.openmath.jome.model.Slot:slotPriorities
ICON = fr.ove.openmath.jome.model.Icon:constantPriorities

# The formula (the most prioritary of all)
FORMULA = fr.ove.openmath.jome.model.Formula:formulaPriorities

# Constants
VARIABLE = fr.ove.openmath.jome.model.Variable:constantPriorities
INTEGER = fr.ove.openmath.jome.model.AnInteger:constantPriorities
FLOAT = fr.ove.openmath.jome.model.AFloat:constantPriorities

# N-ary operators (of "first" kind)
ADDITION = fr.ove.openmath.jome.model.Addition:plusPriorities
SUBSTRACTION = fr.ove.openmath.jome.model.Substraction:plusPriorities
MULTIPLICATION = fr.ove.openmath.jome.model.Multiplication:timesPriorities

# Binary operators
DIVISION = fr.ove.openmath.jome.model.BinaryOperator:dividePriorities
POWER = fr.ove.openmath.jome.model.BinaryOperator:powerPriorities
EQUAL = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
UNEQUAL = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
LESS = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
LESSEQUAL = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
GREATER = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
GREATEREQUAL = fr.ove.openmath.jome.model.BinaryOperator:binaryPriorities
UNDERSCRIPT = fr.ove.openmath.jome.model.BinaryOperator:powerPriorities

# RESPECT space before and after the name of the operator, otherwise when linear exportation
# operands will be attached.
in = fr.ove.openmath.jome.model.NamedBinaryOperator:binaryPriorities
notin = fr.ove.openmath.jome.model.NamedBinaryOperator:binaryPriorities
union = fr.ove.openmath.jome.model.NamedBinaryOperator:binaryPriorities

langle = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
rangle = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities 
lbracket = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities 
rbracket = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities 
cup = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
neq = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
mapsto = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
and = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
or = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities
rightarrow = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities

alpha = fr.ove.openmath.jome.model.Constant:constantPriorities
alfa = fr.ove.openmath.jome.model.Constant:constantPriorities
beta = fr.ove.openmath.jome.model.Constant:constantPriorities
chi = fr.ove.openmath.jome.model.Constant:constantPriorities
epsilon = fr.ove.openmath.jome.model.Constant:constantPriorities
eta = fr.ove.openmath.jome.model.Constant:constantPriorities
gamma = fr.ove.openmath.jome.model.Constant:constantPriorities
iota = fr.ove.openmath.jome.model.Constant:constantPriorities
kappa = fr.ove.openmath.jome.model.Constant:constantPriorities
mu = fr.ove.openmath.jome.model.Constant:constantPriorities
nabla = fr.ove.openmath.jome.model.Constant:constantPriorities
nu = fr.ove.openmath.jome.model.Constant:constantPriorities
omega = fr.ove.openmath.jome.model.Constant:constantPriorities
phi = fr.ove.openmath.jome.model.Constant:constantPriorities
psi = fr.ove.openmath.jome.model.Constant:constantPriorities
rho = fr.ove.openmath.jome.model.Constant:constantPriorities
tau = fr.ove.openmath.jome.model.Constant:constantPriorities
theta = fr.ove.openmath.jome.model.Constant:constantPriorities
upsilon = fr.ove.openmath.jome.model.Constant:constantPriorities
zeta = fr.ove.openmath.jome.model.Constant:constantPriorities
sigma  = fr.ove.openmath.jome.model.Constant:constantPriorities
xi  = fr.ove.openmath.jome.model.Constant:constantPriorities
# Functions (in general, so need refinements)
FUNCTION = refine

# Functions refinements
defaultFunction = fr.ove.openmath.jome.model.Function:constantPriorities

abs = fr.ove.openmath.jome.model.Function:constantPriorities
conj = fr.ove.openmath.jome.model.Function:constantPriorities

# N-ary operators (of "second" kind)
set = fr.ove.openmath.jome.model.Function:constantPriorities

request = fr.ove.openmath.jome.model.Function:constantPriorities
entry = fr.ove.openmath.jome.model.Function:constantPriorities

lambda = fr.ove.openmath.jome.model.LambdaExpression:constantPriorities
subst = fr.ove.openmath.jome.model.Mfd2Substitution:constantPriorities
diff = fr.ove.openmath.jome.model.Differentiation:constantPriorities

# K-ary operators
int = fr.ove.openmath.jome.model.Integral:constantPriorities:4
sum = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:3
array = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:3
prod = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:3
root = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:2
sqrt = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:1
lim = fr.ove.openmath.jome.model.Limit:constantPriorities:3

# Les mots réservés
RESERVED = refine

pi = fr.ove.openmath.jome.model.Constant:constantPriorities
C = fr.ove.openmath.jome.model.Constant:constantPriorities
N = fr.ove.openmath.jome.model.Constant:constantPriorities
Q = fr.ove.openmath.jome.model.Constant:constantPriorities
R = fr.ove.openmath.jome.model.Constant:constantPriorities
Z = fr.ove.openmath.jome.model.Constant:constantPriorities
delta = fr.ove.openmath.jome.model.Constant:constantPriorities
I = fr.ove.openmath.jome.model.StringLowerCaseConstant:constantPriorities
E = fr.ove.openmath.jome.model.StringLowerCaseConstant:constantPriorities
infty = fr.ove.openmath.jome.model.Constant:constantPriorities
true = fr.ove.openmath.jome.model.Variable:constantPriorities
false = fr.ove.openmath.jome.model.Variable:constantPriorities


# Les délimiteurs
OPEN_PAREN = fr.ove.openmath.jome.model.Bracket:bracketPriorities
CLOSE_PAREN = null

OPEN_BRACKET = fr.ove.openmath.jome.model.Bracket:constantPriorities
CLOSE_BRACKET = null 
// Revoir en fonction des listes horizontales ou verticales
OPEN_CURLY = fr.ove.openmath.jome.model.Liste:constantPriorities
CLOSE_CURLY = null
vlist = fr.ove.openmath.jome.model.Function:constantPriorities

# Les séparateurs
SEPARATOR = null


# Les opérateurs spécialisés
SPECIALIZED = refine

# Raffinement pour les opérateurs spécialisés
? = fr.ove.openmath.jome.model.RequestVariable:constantPriorities
fact = fr.ove.openmath.jome.model.Factorial:factorialPriorities


# Add-ons
delta = fr.ove.openmath.jome.model.Constant:constantPriorities
gamma = fr.ove.openmath.jome.model.Constant:constantPriorities

#rondPriorities = 11:10

o = fr.ove.openmath.jome.model.NamedBinaryOperator:rondPriorities

gcd = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:2
quotient = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:2
rem = fr.ove.openmath.jome.model.KaryOperator:constantPriorities:2
cc = fr.ove.openmath.jome.model.ComplexCartesian:constantPriorities:1
cp = fr.ove.openmath.jome.model.ComplexPolar:constantPriorities:1

rat = fr.ove.openmath.jome.model.Rational:constantPriorities:2
