!set typelist1=!trim\
default,Auto,automatic determination of some basic types\
raw,Raw text,control of comparison by options\
numeric,Number, with tolerance of precision\
function,Numerical function, function with numerical tests\
equation,Numerical equation,equation with numerical tests\
exp|algexp litexp formal,Mathematical expression, with formal comparison\
text|case nocase,Text, words or sentences\
multiple|checkbox click menu radio mark flashcard multipleclick,Controlable multiple choices,buttons or menus\

!set typelist2=!trim\
atext,Approximative text, with identification of singular and plural etc.\
chemformula,Raw formula of a molecule,in chemistry\
chemdraw,Draw a molecule\
chemclick,Select atoms or bonds in a molecule\
chemeq,Chemical equation, with balance analysis\
chset,Set of characters,\
clickfill|clickfill dragfill,Drag-and-drop objets,text and image\
clicktile,Click and color tiles,\
clock,Clock\
complex,Complex number,comparison is done numerically\
compose,Compose, using given components\
coord,Click on image, recognition of coordinates and various regions\
correspond,Correspondence, establish the correspondence between pairs of objects\
crossword,Crosswords\
chessgame,Déplacement de pièces sur un échiquier\
geogebra,Dynamic geometry,use applet GeoGebra\
jmolclick,Click on 3D atoms, use applet Jmol\
jsxgraph,Dynamic geometry,use JSXGraph\
jsxgraphcurve, JSXgraph Draw, permettant des tracés avec des formes prédéfinies ou libres\
keyboard,Text, with keyboard\
matrix,Matrix, mathematical\
numexp,Rational numbers, fractional writing\
puzzle,Make in order an image, as in a puzzle\
range,Number within a given range, anything within the range is accepted\
reorder,Reordering, given list of objects\
set|set fset aset,Finite set,literal, formal or approximative\
sigunits,Sigunits,number with unit and significant digits\
symtext,Symtext,advanced tool of text identification\
units,Number with unit, for physics\
vector,Vector,formal comparison of components\
wlist,List of words,\


!set namelist=Basic types, Specific or advanced types
!set symtextlist=text atext raw compose

<h2>User replies to an exercise</h2>

There are two basic ways in which an OEF exercise accepts user replies:
multiple choices and freestyle replies. User answers will be analyzed
according to the nature of the types. It is also possible to show
!href cmd=help&special_parm=feedback feedbacks
 to the user when the answer meeds a specified condition (usually to warn a
typical error).

<h3>Multiple choices</h3>
<p>A multiple choice is defined by giving a list of good choices (one or
several) and another list of bad choices.</p>
<p>Up to $choicelim simultaneous multiple choice questions can be asked for
one exercise, under the current implementation. The number of good and bad
choices within one multiple choice question is unlimited (except a limit on
the length of the string imposed by WIMS).</p>
<p>See
!href cmd=help&special_parm=oef help on OEF format
 for the syntax to define a multiple choice.</p>

<h3 id="freestyle">Freestyle answers</h3>
<p>A freestyle answer is one which is typed by the user.
  Up to $answerlim simultaneous freestyle answers can be asked for one
  exercise, under the current implementation.</p>
  The syntax is as follows:
<code>
\answer{Text}{\reponse}{type=...}{option=...}{weight=...}
</code>
<p>The last 2 fields are optional.
The length of <span class="tt">Text</span> is limited
to $max_promptlen characters.
</p>
<h3>The parameter <span class="tt wims_code_words">type</span></h3>
<p>
Each freestyle answer can independently take one of the following types.
</p>
!for k=1 to 2
 <h4>$(namelist[$k])</h4>
 !set n=!linecnt $(typelist$k)
 <ul>
 !for j=1 to $n
  !set l=!line $j of $(typelist$k)
  !distribute item $l into name,title
  !set desc=!item 3 to -1 of $l
  !set name=!replace internal | by , in $name
  !set name1=!item 2 to -1 of $name
  !set name=!item 1 of $name
  !default name1=$name
  !if $name isitemof $special_parm or all isitemof $special_parm
   <li id="_$name">
   !read help/anstype/$name.phtml
   !if $name iswordof $symtextlist
    <p><b>Remark</b>.
    This type of reply accepts the symtext option. If the word
    <span class="tt wims_code_words">symtext</span> is declared in the option of the reply, the analysis of
    the reply will be exactly as for
    !href cmd=help&special_parm=reply,symtext#_symtext symtext
, in particular with no preliminary processing of the texts. And all the
symtext options will be understood in this case.
    </p>
   !endif
  !else
   <li>
   !href cmd=help&special_parm=reply,$name#_$name $title
   (<span class="tt wims_code_words">$name1</span>) $desc.
  !endif
  </li>
 !next j
 </ul>
!next i

!read help/$lang/embedans.phtml

<h3 id="weight">The optional parameter <span class="tt wims_code_words">weight</span></h3>

It is possible to give a weight to answers.
<p>
Example :
</p>
<pre>\answer{}{1}{type=numeric}{weight=8}
\answer{}{1}{type=numeric}{weight=2}
</pre>
<p>
Le niveau de sévérité  sera aussi pris en compte lors du
calcul fait et le pourcentage sera pris sur un pourcentage fixé
par le niveau de sévérité.
</p><p>
One can put variables in <span class="tt wims_code_words">weight</span>
if they are defined before <span class="tt wims_code_variable">\statement</span>.

<p>Example :</p>
<pre>
\text{w = \t = 1 ? 1 : 2}
\answer{}{1}{type=numeric}{weight=\w}
\answer{}{1}{type=numeric}{weight=3}
</pre>

<h3 id="option">Le paramètre optionnel <span class="tt wims_code_words">option</span></h3>
 Dans le cas de plusieurs options, elles sont séparées par des espaces.
 For example, <span class="tt wims_code_words">option=split noanalyzeprint</span>.

Les options possibles à la suite d'une instruction <span class="tt wims_code_variable">answer</span>
ou <span class="tt wims_code_variable">condition</span> sont
<ul>
  <li><span class="tt wims_code_words">option=default=" "</span>: The option <span class="tt wims_code_words">default</span> is common for all free answers :
    This option can take
    the form <span class="tt wims_code_words">default="default_value"</span>. If the
    user gives an empty reply, it is the default_value that will take place.
    Un message d'avertissement s'affiche au moment où la réponse est envoyée
    que l'on peut supprimer en rajoutant
    <span class="tt wims_code_words">nocheck</span> dans les mots d'option.
  </li><li>
    <span class="tt wims_code_words">option=split</span>: In case of type <span class="tt wims_code_words">correspond</span>, <span class="tt wims_code_words">checkbox</span> or <span class="tt wims_code_words">mark</span>,
    there will be partial score.
  </li><li>
    <span class="tt wims_code_words">option=nonstop</span> : In case of step exercises,
    following questions are asked even if the answer is false.
  </li>
  <li><span class="tt wims_code_words">option=noanalyzeprint</span>: Le texte automatique d'analyse de réponses n'est
    pas affiché. C'est donc à l'auteur de l'exercice de fournir un feedback convenable.
    Cela est utile dans certains types comme le type <span class="tt wims_code_words">mark</span> où le texte automatique
    est souvent inadéquat. Le score subsiste ainsi que l'indication sur la justesse de la réponse.
  </li><li>
    Following the instruction <span class="tt wims_code_words">condition</span>,
    <span class="tt wims_code_words">option=hide</span>: The condition is used to analyze the
    answer but will not be printed.
  </li>
</ul>
Other options are usable in particular answer types. For precision, return to
 the documentation of the answer type.
!read help/option.phtml

<h2>Testing conditions</h2>
<p>Under certain circumstances, it is desired that freestyle answers be tested
by special conditions (questions with multiple good answers, exercises
asking for examples, answers determined by inequalities, etc). This can be
  done in the following way.</p> <p>
If the good answer to a freestyle question is an undefined variable, the
answer to this question will be fed into this variable. The latter can then
be used to implement testing conditions. The score given to the exercise is
then determined by the number of testing conditions which are met, rather
than the number of answers which meet the good answers.
</p><p>
Up to $condlim simultaneous conditions can be defined for one
exercise, under the current implementation. The syntax is as follows.
</p><pre>
\condition{prompt text}{testing conditions}{weight=...}
</pre>
(The last field is optional.)
<p>
Here are some examples of testing conditions. (<span class="tt wims_code_variable">ans1</span> and
<span class="tt wims_code_variable">ans2</span> are undefined variables appearing in freestyle answers, as
described above.)
!href target=wims_mhelp cmd=help&special_parm=if Complete list of relations
</p>
$table_header
$table_hdtr<th>Condition</th><th>meaning</th></tr>
$table_tr<td><tt class="wims_code_variable">ans1>=0 and \ans1<=1</tt></td>
    <td>Good if <span class="tt wims_code_words">ans1</span> is within the interval [0,1].</td></tr>
$table_tr<td class="tt wims_code_variable">ans1=1 or \ans1=3 or \ans1=5</td>
    <td>Good if <span class="tt wims_code_words">ans1</span> is 1, 3 or 5.</td></tr>
$table_tr<td class="tt wims_code_words">(\ans1)*(\ans2)=6 and (\ans1)+(\ans2)=5</td>
    <td>Good if <span class="tt wims_code_words">ans1</span> and <span class="tt wims_code_words">ans2</span> are the two
    roots of the polynomial x<sup>2</sup>-5x+6.</td></tr>
$table_tr<td class="tt wims_code_words">sin(\ans1)=0</td>
    <td>Good if <span class="tt wims_code_words">ans1</span> is a multiple of $m_pi.</td></tr>
$table_end
<p>See
!href cmd=help&special_parm=oef help on oef format
 for the syntax for defining replies.</p>
