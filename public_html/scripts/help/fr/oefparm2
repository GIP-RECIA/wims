:Données et manipulations de listes
:Fonction,Exemple,Signification

:items( )
items(a,b,c,d,e,f)
le nombre d'items de la liste {a,b,c,d,e,f} (6 dans cet exemple)

:item( )
item(3,a,b,c,d,e,f)
item numéro 3 de la liste {a,b,c,d,e,f} (ici c) ; <span class="tt wims_code_words">item(3,\ll)</span> est l'item numéro 3 de la liste \ll (de manière équivalente : :\ll[3])

:item( .. , )
item(2..5,a,b,c,d,e,f)
items numéros 2 à 5 de la liste {a,b,c,d,e,f} (ici b,c,d,e)

:item([ , ], )
item([2,4],\ll)
items numéros 2 et 4 de la liste \ll (de manière équivalente \ll[2,4])

:position( )
position(make,do,go,make,take)
numéros des positions de l'item `make' dans la liste {do,go,make,take} (ici 3)

:rows( )
rows(\m)
nombre de lignes de la matrice \m

:row( , )
row(2,\m)
ligne numéro 2 de la matrice \m (de manière équivalente : <span class="tt wims_code_variable">\m[2;]</span>)

:row( .. , )
row(2..5,\m)
la matrice extraite de \m formée des lignes numéros 2 à 5 (de manière équivalente :
<span class="tt wims_code_variable">\m[2..5;]</span>)

:row([ , ], )
row([1,3],1,2,3<br>3,4,5<br>5,6,7)
la matrice extraite de la matrice 3&times;3 formée de la première ligne et de la troisième ligne

:row( , )
row(column 1 > 1 and column 2 = good,\mat)
la matrice extraite de \mat formée des lignes dont la colonne 1 est > 1 et dont la colonne 2 est le mot `good'

:randomitem( )
randomitem(\list)
un item au hasard de la liste \list (items séparés par des virgules).

:randomrow( )
randomrow(\mat)
une ligne au hasard de la matrice \mat.

:column( , )
column(2,\m)
les items de la colonne numéro 2 de la matrice \m, le résultat est une liste séparée par des virgules (de manière équivalente :\m[;2])

:column( .. , )
column(2..5,\m)
la matrice extraite de \m formée des colonnes numéros 2 à 5 (de manière équivalente :
<span class="tt wims_code_variable">\m[;2..5]</span>)

:column([ , ], )
column([1,3],1,2,3<br>3,4,5<br>5,6,7)
la matrice extraite de la matrice 3&times;3 formée de la première et de la troisième colonne

:asis( )
asis(Comment ça va? item(1,2,3))
la chaîne de caractères telle qu'elle est sans aucune substitution ou interprétation.

:htmlmath( )
htmlmath(2*x^2+3*x)
la manière la meilleure possible de rendre l'expression en html: 2x<sup>2</sup>+3x

:texmath( )
texmath(2*x^2+3*x)
le source TeX de l'expression
