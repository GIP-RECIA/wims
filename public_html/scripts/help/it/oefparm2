:Dati e manipolazioni di liste
:Funzione,Esempio,Spiegazione

:items( )
items(a,b,c,d,e,f)
il numero di elementi della lista {a,b,c,d,e,f} (cioè 6 in questo esempio)

:item( )
item(3,a,b,c,d,e,f)
l'elemento al posto 3 della lista {a,b,c,d,e,f} (qui c) ; <span class="tt wims_code_words">item(3,\ll)</span> è l'elemento di posto 3 della lista \ll (equivalente a: \ll[3])

:item( .. , )
item(2..5,a,b,c,d,e,f)
gli elementi di posto da 2 a 5 della lista {a,b,c,d,e,f} (qui b,c,d,e)

:item([ , ], )
item([2,4],\ll)
gli elementi di posto 2 e 4 della lista \ll (equivalente a: <span class="tt wims_code_variable">\ll[2,4]</span>)

:position( )
position(make,do,go,make,take)
numero del posto in cui compare l'elemento `make' nella lista {do,go,make,take} (qui 3)

:rows( )
rows(\m)
numero di righe della matrice \m

:row( , )
row(2,\m)
riga numero 2 della matrice \m (equivalente a: <span class="tt wims_code_variable">\m[2;]</span>)

:row( .. , )
row(2..5,\m)
la matrice estratta da \m formata dalle righe da 2 a 5 (equivalente a: <span class="tt wims_code_variable">\m[2..5;]</span>)

:row([ , ], )
row([1,3],1,2,3<br>3,4,5<br>5,6,7)
la matrice estratta dalla matrice 3&times;3 formata dalla prima riga e dalal terza riga

:row( , )
row(column 1 > 1 and column 2 = good,\mat)
la matrice estratta da \mat formata dalle righe in cui la colonna 1 è > 1 e la colonna 2 è la parola `good'

:randomitem( )
randomitem(\list)
un elemento scelto a caso nella lista \list (elementi separati da virgole).

:randomrow( )
randomrow(\mat)
una riga scelta a caso nella matrice \mat.

:column( , )
column(2,\m)
gli elementi della colonna numero 2 della matrice \m, il risultato è una lista separata da virgole (equivalente a: \m[;2])

:column( .. , )
column(2..5,\m)
la matrice estratta da \m fromata dalle colonne da 2 a 5 (equivalente a: <span class="tt wims_code_variable">\m[;2..5]</span>)

:column([ , ], )
column([1,3],1,2,3<br>3,4,5<br>5,6,7)
la matrice estratta dalla matrice 3&times;3 formata dalla prima e dalla terza colonna

:asis( )
asis(Comment ça va? item(1,2,3))
la stringa di caratteri così come è senza alcuna sostituzione o interpretazione.

:htmlmath( )
htmlmath(2*x^2+3*x)
il modo migliore di rendere l'espressione in formato html: 2x<sup>2</sup>+3x

:texmath( )
texmath(2*x^2+3*x)
il codice TeX corrispondente all'espressione
