!set methtit2=Dividir una desigualdad por una expresión de signo constante
!set methtit=Dividir una desigualdad por una expresión
!set methenv=ZZ QQ RR
!set methparmtype=function,parm inequality,choice,parm inequality >
!set methparmrelax=4
!set methhelp=Este método transforma una desigualdad del estilo \(A > B) en \
  una desigualdad equivalente \(A/f > B/f) (o \(A/f < B/f)),\
  donde \(f) es una expresión algebraica\
  que debe ser constantemente positiva o constantemente negativa.

!if $wims_read_parm iswordof form check
 !goto $wims_read_parm
!endif

!exit
:form
Dividir la desigualdad
 !read deduc/methparm.phtml 2
 por la expresión
 !read deduc/methparm.phtml 1,10
 que es
 !formselect methparm3 list 0,-1,1 prompt \
	$ch_choose, siempre negativa, siempre positiva
 porque
 !set ch_optional=es un número
 !read deduc/methparm.phtml 4
!exit
:check
 !bound methparm3 within -1,0,1 default 0
 !if $methparm3=0
  error=empty_data
  !exit
 !endif
 !distribute items $methparmobj2 into data,left,sign,right
 !read deduc/sub/checkineq ($methparm1),=,0
 ztest=$out
 !if $ztest=yes
  error=¡División por cero!
  !advance penalty
  !exit
 !endif
 !if $ztest=bad
  !if $methparm4<1
   :bad
   sens=!item ($methparm3+3)/2 of négatif, positif
   error=No veo por qué \($methparm1) es $sens.
   !exit
  !endif
  !distribute items $methparmobj4 into data,left2,sign2,right2
  gt=>
  lt=<
  eq=$(empty)=
  !if ($methparm3>0 and $lt isin $sign2) or \
	($methparm3<0 and $gt isin $sign2)
   !exchange left2,right2
  !endif
  sens=!item ($methparm3+3)/2 of <,>
  !if $eq notin $sign2
   sens=$sens=
  !endif
  !read deduc/sub/checkineq ($methparm1) - ($left2) + ($right2),$sens,0
  !if $out!=true
   !goto bad
  !endif
 !else
  !if ($methparm1)*$methparm3<0
   error=¡Error de signo!
   !exit
  !endif
 !endif
 :OK
 methexp=Dividir \($left $sign $right) entre \($methparm1)

 !read deduc/sub/simplify ($left) / ($methparm1)\
	($right) / ($methparm1)
 !distribute lines $out into newleft,newright
 !if $newleft=$empty or $newright=$empty
  error=bad_data
  !exit
 !endif
 !if $methparm3<0
  newsign=!translate internal <> to >< in $sign
 !else
  newsign=$sign
 !endif
 newobject2=$newleft $newsign $newright
 oldobject=2

 badsign=!translate internal <> to >< in $newsign
 resultlist=$newobject2,\
	$newright $newsign $newleft,\
	$newleft $badsign $newright
!exit

