!set p_=!word 1 of $wims_read_parm
!bound p_ within none,header,source,html default none
!goto $p_
:none
!exit
:header
!set m_subject=Embed input fields into OEF exercise statements
!set m_date=20020526
!set m_time=07:46:10
!set m_from=Gang XIAO
!set m_sender_ip=127.0.0.1
!set m_sender_id=
!set m_sender_class=
!set m_email=xiao@unice.fr
!set m_to=
!set m_prec=O200205/2
!set m_exists=yes
!exit
:source
<pre>
This is a response to many requests of OEF exercise developers. Now you can embed input fields (freestyle replies and/or multiple choice menus) into the statement of an OEF exercise.

Examples:&lt;ul>
&lt;li>&lt;tt>\\embed{reply 1}&lt;/tt> insert the first freestyle reply into the text.
&lt;li>&lt;tt>\\embed{reply 2,10}&lt;/tt> insert the second freestyle reply into the text,
with an input field of size 10.
&lt;li>&lt;tt>\\embed{choice 1}&lt;/tt> insert the first multiple choice into the text.
&lt;/ul>

The corresponding replies and choices must be defined in the usual way.</pre>
!exit
:html
This is a response to many requests of OEF exercise developers. Now you can embed input fields (freestyle replies and/or multiple choice menus) into the statement of an OEF exercise.
<p>
Examples&#58;<ul>
<li><tt>\embed{reply 1}</tt> insert the first freestyle reply into the text.
<li><tt>\embed{reply 2,10}</tt> insert the second freestyle reply into the text,
with an input field of size 10.
<li><tt>\embed{choice 1}</tt> insert the first multiple choice into the text.
</ul>
<p>
The corresponding replies and choices must be defined in the usual way.
